# Foo does Bar and Baz.
Foo: !All
  - Bar
  - Baz

# Bar doesn't do much.
Bar: !Command
  Shell: echo How do you do

# Baz does X after Y and Z.
Baz: !Deps
  - X
  - Y
  - Z

Baz2: !Deps
  Pre:
    - Y
    - Z
  Post: X

# X does A then B then C.
X: !Seq
  - A
  - B
  - C

# Y cleans.
Y: !Clean
  - file1
  - file2

# Z builds output if p.go, q.go, or r.go change.
Z: !Files
  Target: !Command
    Shell: go build -o output ./...
  In:
    - p.go
    - q.go
    - r.go
  Out:
    - output

# W tests ArgTarget (passing args foo and bar to X).
W: !ArgTarget
  - X
  - foo
  - bar

StdoutStdout: !Command
  Shell: echo Hello
  Stdout: $stdout

StderrStdout: !Command
  Shell: echo Hello
  Stdout: $stderr

DiscardStdout: !Command
  Shell: echo Hello
  Stdout: $discard

VerboseStdout: !Command
  Shell: echo Hello
  Stdout: $verbose

IndentStdout: !Command
  Shell: echo Hello
  Stdout: $indent

StdoutStderr: !Command
  Shell: echo Hello
  Stderr: $stdout

StderrStderr: !Command
  Shell: echo Hello
  Stderr: $stderr

DiscardStderr: !Command
  Shell: echo Hello
  Stderr: $discard

VerboseStderr: !Command
  Shell: echo Hello
  Stderr: $verbose

IndentStderr: !Command
  Shell: echo Hello
  Stderr: $indent

MultiCommand: !Command
  Shell:
    - echo Wang
    - echo Chung
  Dir: x
  Stdout: foo
  Stderr: bar
